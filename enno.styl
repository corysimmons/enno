$columns = 12
$gutter = 15px
$max-width = 750px
$breakpoint = {
  large: 1000px,
  medium: 500px
}

html
  overflow-x: hidden

*
  box-sizing: border-box

.container
  max-width: $max-width
  margin: auto

.clearfix
  *zoom: 1
  &:before, &:after
    content: ''
    display: table
  &:after
    clear: both

.row
  @extend .clearfix
  width: s('calc(100% + %s)', $gutter)
  margin-left: -($gutter)
  &.equal
    width: 100%
    margin-left: auto

grid($frac = 1, $gut = $gutter)
  return s('calc(99.99% * %s - %s)', $frac, $gut)

for $i in 1..$columns
  .small-{$i}
    float: left
    width: grid($i/$columns)
    margin-left: $gutter

.gutless
  width: 100%
  margin-left: auto

for $i in 1..$columns
  .gutless
    > .small-{$i}
      width: (100% * $i/$columns)%

@media (min-width: $breakpoint.medium)
  for $i in 1..$columns
    .medium-{$i}
      float: left
      width: grid($i/$columns)
      margin-left: $gutter

@media (min-width: $breakpoint.medium)
  for $i in 1..$columns
    .gutless
      > .medium-{$i}
        width: (100% * $i/$columns)%

@media (min-width: $breakpoint.large)
  for $i in 1..$columns
    .large-{$i}
      float: left
      width: grid($i/$columns)
      margin-left: $gutter

@media (min-width: $breakpoint.large)
  for $i in 1..$columns
    .gutless
      > .large-{$i}
        width: (100% * $i/$columns)%

.gutless
  > *
    margin-left: 0

// Idea courtesy of Daniel Box
.equal
  display: table
  table-layout: fixed
  width: s('calc(100% + %s)', $gutter * 2)
  border-spacing: $gutter 0
  margin-left: -($gutter)
  margin-right: -($gutter)
  > *
  	display: table-cell

[class*="bg-"]
  position: relative
  > *
    position: relative
    z-index: 1
  &:before
    position: absolute
    display: block
    width: s('calc(100% - %s)', $gutter)
    height: 100%
    left: $gutter
